package ar.edu.ungs.prog2.ticketek;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.LinkedHashMap;
import java.util.LinkedHashSet;

public class Espectaculo {

	String nombre;
	LinkedHashMap<String,Funcion> funciones;
	DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yy");

	
	Espectaculo(String nombre){

		this.nombre = nombre;
		this.funciones = new LinkedHashMap<>();;
	}

	
	@Override 
	public String toString() {

		StringBuilder info = new StringBuilder();

		for (Funcion funcion : funciones.values()) {

			info.append(funcion.toString());
			info.append("\n");
		}
		return info.toString();
	}

	
	public boolean hayFuncion(String fecha){

		for (Funcion fun : funciones.values()) {
			if (fun.fecha.equals(LocalDate.parse(fecha,formatter)))
				return true;
		}
		return false;
	}

	
	void agregarFuncion(Funcion funcion) {

		for (Funcion fun : funciones.values()) {
			if (fun.fecha.equals(funcion.fecha) && fun.sede.equals(funcion.sede))
				throw new RuntimeException ("La fecha no esta disponible");
		}
		funciones.put(funcion.fecha,funcion);
	}

	
	Sede sedeFuncion(String fecha){

		for (Funcion funcion : funciones.values()) {
			if (funcion.fecha.equals(LocalDate.parse(fecha,formatter))) {
				return funcion.sede;
			}
		}
		return null;
	}

	
	double precioFuncion(String fecha) {

		for (Funcion funcion : funciones.values()) {
			if (funcion.fecha.equals(LocalDate.parse(fecha, formatter))) {
				return funcion.precioBase;
			}
		}

		throw new RuntimeException("No se encontr贸 funci贸n para la fecha: " + fecha);
	}


	double precioFuncion(String fecha, String sector) {

		LocalDate date = LocalDate.parse(fecha,formatter);
		for ( Funcion funcion : funciones.values()) {
			if(funcion.fecha.equals(date))
				if(funcion.sede.getClass().getSimpleName().equals("Teatro")) {
					return funcion.precio(sector);
				}
				else if(funcion.sede.getClass().getSimpleName().equals("MiniEstadio")) {

					MiniEstadio miniEstadio = (MiniEstadio) funcion.sede;
					return funcion.precioBase + miniEstadio.getvalorFijoConsumicion() * (1 + (funcion.sede.porcentajeAdicional(sector)/100)); 
				}
		}
		throw new RuntimeException("No se encontr贸 funci贸n para la fecha: " + fecha);
	}

	public void agregarVenta(String sector,String fecha) {
		for ( Funcion funcion : funciones.values()) 
			if(funcion.fecha.equals(LocalDate.parse(fecha,formatter))) {
				funcion.agregarVenta(sector);
			}
	}
	
	public void quitarVenta(Sede sede,String sector){
		
		Funcion funcion = funciones.get(sede);
		funcion.quitarVenta(sector);
	}
}

package ar.edu.ungs.prog2.ticketek;

import java.util.LinkedHashMap;

public class Espectaculo {

	String nombre;
	LinkedHashMap<Fecha,Funcion> funciones;


	Espectaculo(String nombre){

		this.nombre = nombre;
		this.funciones = new LinkedHashMap<>();;
	}


	@Override 
	public String toString() {

		StringBuilder info = new StringBuilder();

		for (Funcion funcion : funciones.values()) {

			info.append(funcion.toString());
			info.append("\n");
		}
		return info.toString();
	}


	public boolean hayFuncion(Fecha fecha){

		for (Funcion fun : funciones.values()) {
			if (fun.fecha.equals(fecha))
				return true;
		}
		return false;
	}


	void agregarFuncion(Funcion funcion) {

		for (Funcion fun : funciones.values()) {
			if (fun.fecha.equals(funcion.fecha) && fun.sede.equals(funcion.sede))
				throw new RuntimeException ("La fecha no esta disponible");
		}
		funciones.put(funcion.fecha,funcion);
	}


	Sede sedeFuncion(Fecha fecha){

		for (Funcion funcion : funciones.values()) {
			if (funcion.fecha.equals(fecha)) {
				return funcion.sede;
			}
		}
		return null;
	}


	double precioFuncion(Fecha fecha) {

		for (Funcion funcion : funciones.values()) {
			if (funcion.fecha.equals(fecha)) {
				return funcion.precioBase;
			}
		}

		throw new RuntimeException("No se encontr贸 funci贸n para la fecha: " + fecha);
	}


	double precioFuncion(Fecha fecha, String sector) {

//		LocalDate date = LocalDate.parse(fecha,formatter);
		for ( Funcion funcion : funciones.values()) {
			if(funcion.fecha.equals(fecha))
				if(funcion.sede.getClass().getSimpleName().equals("Teatro")) {
					return funcion.precio(sector);
				}
//				else if(funcion.sede.getClass().getSimpleName().equals("MiniEstadio")) {
//
//					MiniEstadio miniEstadio = (MiniEstadio) funcion.sede;
					return (funcion.precioBase + miniEstadio.valorFijoConsumicion) * (1 + (miniEstadio.porcentajeAdicional(sector)/100)); 
				}
		
		throw new RuntimeException("No se encontr贸 funci贸n para la fecha: " + fecha);
	}

	public void agregarVenta(Fecha fecha,String sector) {
		for ( Funcion funcion : funciones.values()) 
			if(funcion.fecha.equals(fecha)) {
				funcion.agregarVenta(sector);
			}
	}

	public void quitarVenta(Fecha fecha,String sector){

		Funcion funcion = funciones.get(fecha);
		funcion.quitarVenta(sector);
	}


	public double recaudacion() {

		double totalRecaudado = 0;
		for (Funcion funcion : funciones.values()) {

			totalRecaudado += funcion.recaudacion();		
		}
		return totalRecaudado;	
	}


	public double recaudacion(String nombreSede) {

		double totalRecaudado = 0;		
		for (Funcion funcion : funciones.values()) {

			if(funcion.sede.nombre.equals(nombreSede)) {				
				totalRecaudado += funcion.recaudacion();
			}			
		}
		return totalRecaudado;
	}
}

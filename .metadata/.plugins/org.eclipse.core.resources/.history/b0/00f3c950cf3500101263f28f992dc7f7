package ar.edu.ungs.prog2.ticketek;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.LinkedHashSet;
import java.util.List;


public class Ticketek implements ITicketek {

	HashMap<String, Sede> sedes = new HashMap<>();
	HashMap<String, Espectaculo> espectaculos = new HashMap<>();
	HashMap<String,Usuario> usuarios = new HashMap<>();
	private int codigoEntrada = 0; 

	@Override
	public void registrarSede(String nombre, String direccion, int capacidadMaxima) {

		if (sedes.containsKey(nombre)) {
			throw new RuntimeException("El nombre ya esta registrado");
		}		
		Sede estadio = new Estadio(nombre,direccion,capacidadMaxima);

		sedes.put(nombre,estadio);

	}

	@Override
	public void registrarSede(String nombre, String direccion, int capacidadMaxima, int asientosPorFila,
			String[] sectores, int[] capacidad, int[] porcentajeAdicional) {

		if (sedes.containsKey(nombre)) {
			throw new RuntimeException("El nombre ya esta registrado");
		}
		Sede teatro = new Teatro(nombre,direccion,capacidadMaxima, asientosPorFila,sectores,capacidad,porcentajeAdicional);		

		sedes.put(nombre, teatro);

	}


	@Override
	public void registrarSede(String nombre, String direccion, int capacidadMaxima, int asientosPorFila,
			int cantidadPuestos, double precioConsumicion, String[] sectores, int[] capacidad,
			int[] porcentajeAdicional) {

		if (sedes.containsKey(nombre)) {
			throw new RuntimeException("El nombre ya esta registrado");
		}
		Sede miniEstadio = new miniEstadio(nombre,direccion,capacidadMaxima,asientosPorFila,cantidadPuestos,precioConsumicion,sectores,capacidad,porcentajeAdicional);
		sedes.put(nombre, miniEstadio);
	}

	@Override
	public void registrarUsuario(String email, String nombre, String apellido, String contrasenia) {
		if (usuarios.containsKey(email)) {

			throw new RuntimeException("el email ya existe en nuestra base de datos");
		}
		Usuario usuario = new Usuario(email,nombre,apellido,contrasenia);
		usuarios.put(email, usuario);
	}

	@Override
	public void registrarEspectaculo(String nombre) {

		if (espectaculos.containsKey(nombre)) {
			throw new RuntimeException("El nombre ya esta registrado");
		}
		Espectaculo espectaculo = new Espectaculo(nombre);
		espectaculos.put(nombre, espectaculo);

	}

	@Override
	public void agregarFuncion(String nombreEspectaculo, String fecha, String sede, double precioBase) {

		if (!espectaculos.containsKey(nombreEspectaculo) || !sedes.containsKey(sede)) {

			throw new RuntimeException("el espectaculo o la sede no estan registrados");
		}
		
		else if(espectaculos.get(nombreEspectaculo).hayFuncion(fecha)) {

			throw new RuntimeException("Ya existe una funcion para la fecha indicada");
		}
		Funcion funcion = new Funcion(fecha,sedes.get(sede),precioBase);
		espectaculos.get(nombreEspectaculo).agregarFuncion(funcion);

	}

	@Override
	public List<IEntrada> venderEntrada(String nombreEspectaculo, String fecha, String email, String contrasenia,
			int cantidadEntradas) {

		// Verificar si el usuario existe y la contraseña es correcta
		if (usuarios.get(email) == null || !usuarios.get(email).contraseña.equals(contrasenia)) {
			throw new RuntimeException("Usuario no encontrado o contraseña incorrecta");
		}
		// Verificar si el espectáculo existe
		if (espectaculos.get(nombreEspectaculo) == null) {
			throw new RuntimeException("El espectáculo no existe");
		}
		// Verificar si la función existe.        
		if (!espectaculos.get(nombreEspectaculo).hayFuncion(fecha)){
			throw new RuntimeException("No hay funcion para la fecha especificada");
		}
		
		LinkedHashSet<Funcion>  funciones = espectaculos.get(nombreEspectaculo).funciones;
		double precioBase = 0;
		for ( Funcion funcion : funciones) {
			
			if(funcion.fecha.equals(fecha))
				precioBase = funcion.precioBase;			
		}
		
		

	    List<IEntrada> nuevasEntradas = new ArrayList<>();
	    Usuario user = usuarios.get(email);

	    for (int i = 0; i < cantidadEntradas; i++) {
	        codigoEntrada++;// reemplazar por una lógica real
	        Sede sede = espectaculos.get(nombreEspectaculo).getSedeFuncion(fecha);
	        IEntrada entrada = new Entrada(codigoEntrada, nombreEspectaculo, fecha, sede);
	        user.entradas.put(codigoEntrada, entrada);
	        nuevasEntradas.add(entrada);
	    }

	    return nuevasEntradas;
	}




	@Override
	public List<IEntrada> venderEntrada(String nombreEspectaculo, String fecha, String email, String contrasenia,
			String sector, int[] asientos) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String listarFunciones(String nombreEspectaculo) {

		if (espectaculos.containsKey(nombreEspectaculo)){

			return espectaculos.get(nombreEspectaculo).toString();
		}
		else {

			return "El espectáculo \"" + nombreEspectaculo + "\" no existe.";
		}
	}

	@Override
	public List<IEntrada> listarEntradasEspectaculo(String nombreEspectaculo) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<IEntrada> listarEntradasFuturas(String email, String contrasenia) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<IEntrada> listarTodasLasEntradasDelUsuario(String email, String contrasenia) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean anularEntrada(IEntrada entrada, String contrasenia) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public IEntrada cambiarEntrada(IEntrada entrada, String contrasenia, String fecha, String sector, int asiento) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public IEntrada cambiarEntrada(IEntrada entrada, String contrasenia, String fecha) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public double costoEntrada(String nombreEspectaculo, String fecha) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public double costoEntrada(String nombreEspectaculo, String fecha, String sector) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public double totalRecaudado(String nombreEspectaculo) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public double totalRecaudadoPorSede(String nombreEspectaculo, String nombreSede) {
		// TODO Auto-generated method stub
		return 0;
	}

}
